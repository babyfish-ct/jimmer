export org.babyfish.jimmer.sql.kt.model.hr.Employee
    -> package org.babyfish.jimmer.sql.kt.model.hr.dto

import com.fasterxml.jackson.annotation.JsonFormat
import com.fasterxml.jackson.databind.annotation.{JsonSerialize, JsonDeserialize}
import org.babyfish.jimmer.sql.kt.model.hr.{MagicStringSerializer, MagicStringDeserializer}
import org.babyfish.jimmer.kt.dto.{ KotlinDto, KotlinDtoImmutability }

specification EmployeeSpecificationForIssue735 {
    like/i(employeeName)
    null(department)
    flat(department) {
        name as departmentName
    }
}

@KotlinDto(immutability = KotlinDtoImmutability.IMMUTABLE)
input EmployeeInput {
    #allScalars

    @JsonSerialize(using = MagicStringSerializer::class)
    @JsonDeserialize(using = MagicStringDeserializer::class)
    @JsonFormat(pattern = "[^%]+")
    employeeName as name
}

input EmployeeInputForIssue943 {
    #allScalars
    flat(department) {
        as (^ -> department) {
            #allScalars
        }
    }
}

specification EmployeeSpecificationForIssue980 {

    like/i(employeeName)! as name
    flat(department) {
        name as departmentName
    }
}

input EmployeeInputForIssue1010 {
    #allScalars
}